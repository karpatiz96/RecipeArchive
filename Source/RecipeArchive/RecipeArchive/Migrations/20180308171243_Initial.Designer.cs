// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RecipeArchive.Models;
using System;

namespace RecipeArchive.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180308171243_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RecipeArchive.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MealID");

                    b.Property<string>("Name");

                    b.Property<string>("Quantity");

                    b.HasKey("IngredientID");

                    b.HasIndex("MealID");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("RecipeArchive.Models.Meal", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Difficulty");

                    b.Property<int?>("MakeTime");

                    b.Property<int>("MealTypeID");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Picture");

                    b.HasKey("MealID");

                    b.HasIndex("MealTypeID");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("RecipeArchive.Models.MealType", b =>
                {
                    b.Property<int>("MealTypeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("MealTypeID");

                    b.ToTable("MealType");
                });

            modelBuilder.Entity("RecipeArchive.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RecipeArchive.Models.UserMeal", b =>
                {
                    b.Property<int>("UserMealID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AlreadyMade");

                    b.Property<bool>("Favourite");

                    b.Property<int>("MealID");

                    b.Property<bool>("RecipeBook");

                    b.Property<int>("Stars");

                    b.Property<int>("UserID");

                    b.HasKey("UserMealID");

                    b.HasIndex("MealID");

                    b.HasIndex("UserID");

                    b.ToTable("UserMeal");
                });

            modelBuilder.Entity("RecipeArchive.Models.Ingredient", b =>
                {
                    b.HasOne("RecipeArchive.Models.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RecipeArchive.Models.Meal", b =>
                {
                    b.HasOne("RecipeArchive.Models.MealType", "MealType")
                        .WithMany()
                        .HasForeignKey("MealTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RecipeArchive.Models.UserMeal", b =>
                {
                    b.HasOne("RecipeArchive.Models.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RecipeArchive.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
